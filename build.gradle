plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = project.mod_version
group = 'com.github.dragoni7' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modName}-forge-${minecraft_version}"

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.20.1'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'mixin.env.disableRefMap', 'true'

            property 'forge.enabledGameTestNamespaces', 'silentcompat'

            mods {
                silentcompat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'mixin.env.disableRefMap', 'true'

            property 'forge.enabledGameTestNamespaces', 'silentcompat'

            mods {
                silentcompat {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'mixin.env.disableRefMap', 'true'

            property 'forge.enabledGameTestNamespaces', 'silentcompat'

            mods {
                silentcompat {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'mixin.env.disableRefMap', 'true'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'silentcompat', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                silentcompat {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

def gpr_creds = {
    username = property('gpr.username')
    password = property('gpr.token')
  
}

repositories {

    maven {
        url = uri("https://maven.pkg.github.com/silentchaos512/silent-gear")
        credentials gpr_creds
    }
    maven {
        url = uri("https://maven.pkg.github.com/silentchaos512/silentlib")
        credentials gpr_creds
    }
    maven {
        url = uri("https://maven.pkg.github.com/silentchaos512/silent-utils")
        credentials gpr_creds
    }
    maven { 
        // jei
        url 'https://maven.blamejared.com' 
    }
    maven {
    // location of the maven that hosts JEI files
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url = 'https://www.cursemaven.com' }
    //maven { url = 'https://maven.moddingx.org/' }
    //maven { url = 'https://maven.melanx.de/' }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.20.1-${forge_version}"

    // botania
    compileOnly fg.deobf("vazkii.botania:Botania:${botania_version}:api")
    implementation fg.deobf("vazkii.botania:Botania:${botania_version}")
    implementation fg.deobf("vazkii.patchouli:Patchouli:1.20.1-83-FORGE")
    //compileOnly fg.deobf("vazkii.patchouli:Patchouli:${minecraft_version}-83:api")
    //runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${minecraft_version}-83")
    
    // botanic additions
    //implementation fg.deobf("curse.maven:hammer-lib-247401:4558470")
    //implementation fg.deobf("curse.maven:botanic-additions-310637:4558483")

    // mythic botany
    //implementation fg.deobf("curse.maven:libx-412525:4052778")
    //implementation fg.deobf("curse.maven:sand_box-653732:4029683")
    //implementation fg.deobf("curse.maven:mythicbotany-400058:4546050")

    // compile against the JEI API but do not include it at runtime
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}"))

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")

    implementation fg.deobf("net.silentchaos512:silent-lib:${project.silentlib_version}") {
        transitive false
        //exclude module: "forge"
    }

    implementation fg.deobf("net.silentchaos512:silent-gear:${project.silentgear_version}") {
        transitive false
        //exclude module: 'forge'
        //exclude module: 'jei-1.19.2-forge'
        //exclude module: 'silent-lib'
        //exclude module: 'curios-forge'
        //exclude module: 'World-Stripper'
        //exclude module: 'Patchouli'
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "${project.modName}",
                "Specification-Vendor"    : "dragoni7",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "${project.modName}",
                "Implementation-Version"  : archiveVersion,
                "Implementation-Vendor"   : "dragoni7",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
